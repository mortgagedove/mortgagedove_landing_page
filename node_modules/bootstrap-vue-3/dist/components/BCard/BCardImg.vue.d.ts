import type { Booleanish } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    alt: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    bottom: {
        type: null;
        required: false;
        default: boolean;
    };
    end: {
        type: null;
        required: false;
        default: boolean;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    left: {
        type: null;
        required: false;
        default: boolean;
    };
    right: {
        type: null;
        required: false;
        default: boolean;
    };
    src: {
        type: StringConstructor;
        required: false;
    };
    lazy: {
        type: null;
        required: false;
        default: boolean;
    };
    start: {
        type: null;
        required: false;
        default: boolean;
    };
    top: {
        type: null;
        required: false;
        default: boolean;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
}, {
    props: {
        alt: string;
        bottom: Booleanish;
        end: Booleanish;
        height?: string | number | undefined;
        left: Booleanish;
        right: Booleanish;
        src?: string | undefined;
        lazy: Booleanish;
        start: Booleanish;
        top: Booleanish;
        width?: string | number | undefined;
    };
    bottomBoolean: import("vue").ComputedRef<boolean>;
    endBoolean: import("vue").ComputedRef<boolean>;
    leftBoolean: import("vue").ComputedRef<boolean>;
    rightBoolean: import("vue").ComputedRef<boolean>;
    startBoolean: import("vue").ComputedRef<boolean>;
    topBoolean: import("vue").ComputedRef<boolean>;
    lazyBoolean: import("vue").ComputedRef<boolean>;
    attrs: import("vue").ComputedRef<{
        loading: string;
        src: string | undefined;
        alt: string;
        width: number | undefined;
        height: number | undefined;
    }>;
    alignment: import("vue").ComputedRef<"" | "float-start" | "float-end">;
    baseClass: import("vue").ComputedRef<"card-img-top" | "card-img-right" | "card-img-bottom" | "card-img-left" | "card-img">;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    bottom: {
        type: null;
        required: false;
        default: boolean;
    };
    end: {
        type: null;
        required: false;
        default: boolean;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    left: {
        type: null;
        required: false;
        default: boolean;
    };
    right: {
        type: null;
        required: false;
        default: boolean;
    };
    src: {
        type: StringConstructor;
        required: false;
    };
    lazy: {
        type: null;
        required: false;
        default: boolean;
    };
    start: {
        type: null;
        required: false;
        default: boolean;
    };
    top: {
        type: null;
        required: false;
        default: boolean;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
}>>, {
    alt: string;
    top: any;
    bottom: any;
    left: any;
    right: any;
    end: any;
    start: any;
    lazy: any;
}>;
export default _sfc_main;

import type { Booleanish, ColorVariant, TextColorVariant } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    bodyBgVariant: {
        type: null;
        required: false;
    };
    bodyTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    bodyTextVariant: {
        type: null;
        required: false;
    };
    overlay: {
        type: null;
        required: false;
        default: boolean;
    };
    subtitle: {
        type: StringConstructor;
        required: false;
    };
    subtitleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    subtitleTextVariant: {
        type: null;
        required: false;
    };
    title: {
        type: StringConstructor;
        required: false;
    };
    titleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    text: {
        type: StringConstructor;
        required: false;
    };
}, {
    props: {
        bodyBgVariant?: ColorVariant | undefined;
        bodyTag: string;
        bodyTextVariant?: TextColorVariant | undefined;
        overlay: Booleanish;
        subtitle?: string | undefined;
        subtitleTag: string;
        subtitleTextVariant?: TextColorVariant | undefined;
        title?: string | undefined;
        titleTag: string;
        text?: string | undefined;
    };
    overlayBoolean: import("vue").ComputedRef<boolean>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
        'card-img-overlay': boolean;
    }>;
    BCardTitle: import("vue").DefineComponent<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }>>, {
        tag: string;
    }>;
    BCardSubTitle: import("vue").DefineComponent<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        textVariant: {
            type: null;
            required: false;
            default: string;
        };
    }, {
        props: {
            text?: string | undefined;
            tag: string;
            textVariant: TextColorVariant;
        };
        classes: import("vue").ComputedRef<{
            [x: string]: boolean;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        text: {
            type: StringConstructor;
            required: false;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
        textVariant: {
            type: null;
            required: false;
            default: string;
        };
    }>>, {
        tag: string;
        textVariant: any;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    bodyBgVariant: {
        type: null;
        required: false;
    };
    bodyTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    bodyTextVariant: {
        type: null;
        required: false;
    };
    overlay: {
        type: null;
        required: false;
        default: boolean;
    };
    subtitle: {
        type: StringConstructor;
        required: false;
    };
    subtitleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    subtitleTextVariant: {
        type: null;
        required: false;
    };
    title: {
        type: StringConstructor;
        required: false;
    };
    titleTag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    text: {
        type: StringConstructor;
        required: false;
    };
}>>, {
    overlay: any;
    bodyTag: string;
    subtitleTag: string;
    titleTag: string;
}>;
export default _sfc_main;

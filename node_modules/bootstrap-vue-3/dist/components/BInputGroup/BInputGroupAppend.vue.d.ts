import type { Booleanish } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    id: {
        type: StringConstructor;
        required: false;
    };
    isText: {
        type: null;
        required: false;
        default: boolean;
    };
    tag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
}, {
    props: {
        id?: string | undefined;
        isText: Booleanish;
        tag: string;
    };
    computedAttrs: import("vue").ComputedRef<{
        id: string | undefined;
        isText: Booleanish;
        tag: string;
        append: boolean;
    }>;
    BInputGroupAddon: import("vue").DefineComponent<{
        append: {
            type: null;
            required: false;
            default: boolean;
        };
        id: {
            type: StringConstructor;
            required: false;
        };
        isText: {
            type: null;
            required: false;
            default: boolean;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }, {
        props: {
            append: Booleanish;
            id?: string | undefined;
            isText: Booleanish;
            tag: string;
        };
        appendBoolean: import("vue").ComputedRef<boolean>;
        isTextBoolean: import("vue").ComputedRef<boolean>;
        computedClasses: import("vue").ComputedRef<{
            'input-group-append': boolean;
            'input-group-prepend': boolean;
        }>;
        BInputGroupText: import("vue").DefineComponent<{
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            text: {
                type: StringConstructor;
                required: false;
            };
        }, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
            tag: {
                type: StringConstructor;
                required: false;
                default: string;
            };
            text: {
                type: StringConstructor;
                required: false;
            };
        }>>, {
            tag: string;
        }>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        append: {
            type: null;
            required: false;
            default: boolean;
        };
        id: {
            type: StringConstructor;
            required: false;
        };
        isText: {
            type: null;
            required: false;
            default: boolean;
        };
        tag: {
            type: StringConstructor;
            required: false;
            default: string;
        };
    }>>, {
        tag: string;
        append: any;
        isText: any;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    id: {
        type: StringConstructor;
        required: false;
    };
    isText: {
        type: null;
        required: false;
        default: boolean;
    };
    tag: {
        type: StringConstructor;
        required: false;
        default: string;
    };
}>>, {
    tag: string;
    isText: any;
}>;
export default _sfc_main;

import type { Booleanish, ButtonType } from '../../types';
declare const _sfc_main: import("vue").DefineComponent<{
    disabled: {
        type: null;
        required: false;
        default: boolean;
    };
    white: {
        type: null;
        required: false;
        default: boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    type: {
        type: null;
        required: false;
        default: string;
    };
}, {
    props: {
        disabled: Booleanish;
        white: Booleanish;
        ariaLabel: string;
        type: ButtonType;
    };
    disabledBoolean: import("vue").ComputedRef<boolean>;
    whiteBoolean: import("vue").ComputedRef<boolean>;
    classes: import("vue").ComputedRef<{
        'btn-close-white': boolean;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    disabled: {
        type: null;
        required: false;
        default: boolean;
    };
    white: {
        type: null;
        required: false;
        default: boolean;
    };
    ariaLabel: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    type: {
        type: null;
        required: false;
        default: string;
    };
}>>, {
    type: any;
    disabled: any;
    white: any;
    ariaLabel: string;
}>;
export default _sfc_main;
